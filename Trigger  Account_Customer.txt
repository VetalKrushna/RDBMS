
create table Account (a_no int primary key,
 a_type varchar(10),
 opening_date  date,
 balance money);

a. Write a trigger which is executed whenever update is made to the account table.
 If the balance becomes less than 1000, print an error message that balance cannot be less than 1000.


create or replace function fun5() returns trigger as
$$
declare
begin 
  if(new.balance<'1000') then
   raise exception'BAlance less than 1000 does not allowed...';
  end if;
return new;
end; 
$$
language plpgsql;

create trigger t6
before update  on  Account
for each row
execute procedure fun5();

update Account set balance='25000' 
where a_no=1001;

update Account set balance='900' 
where a_no=1001;

b. Write a trigger before deleting an account record from Account table. Raise a notice 
and display the message “Account record is being deleted.”
=
 create or replace function fun() returns trigger 
as
$$
DECLARE
BEGIN
    raise notice'Account record is being deleted....';
    return new;
END; 
$$
language plpgsql;


create trigger t1
before delete on account
for each row
execute procedure fun();

 delete from account where a_no=101;
NOTICE:  Account record is being deleted....

c)Write a trigger before inserting an account record in Account table and 
raise exception if balance is <500.

create or replace function fun_account() returns trigger as
$$
declare
begin 
  if(new.balance<'500') then
   raise exception'Account Balance must be greater than 500.....';
  end if;
return new;
end; 
$$
language plpgsql;

create trigger t5
before insert  on  Account
for each row
execute procedure fun_account();

insert into account values(1001,'Saving','2024-02-20',5000);
insert into account values(1002,'Current','2024-01-20',300);

postgres=# insert into account values(1002,'Current','2024-01-20',300);
ERROR:  Account Balance must be greater than 500.....
